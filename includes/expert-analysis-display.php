<?php
/**
 * Enhanced Expert Analysis Display and PDF Generation
 * This file contains functions for displaying expert analysis with professional HTML layout
 * and generating PDF reports
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

/**
 * Format expert analysis content with enhanced HTML layout
 * 
 * @param array $analysis_data The expert analysis data
 * @param string $listing_url The original listing URL
 * @param string $snapshot_id The snapshot ID
 * @return string Enhanced HTML content
 */
function airbnb_analyzer_format_expert_analysis($analysis_data, $listing_url = '', $snapshot_id = '') {
    $content = $analysis_data['content'];
    $generated_at = $analysis_data['generated_at'];
    $model_used = $analysis_data['model_used'] ?? 'Claude AI';
    $output_tokens = $analysis_data['output_tokens'] ?? 0;
    
    // Parse the content into structured sections
    $sections = airbnb_analyzer_parse_analysis_content($content);
    
    // Generate professional HTML layout
    $html = '<div class="expert-analysis-report">';
    
    // Header section
    $html .= '<div class="report-header">';
    $html .= '<div class="report-title">';
    $html .= '<h1><span class="report-icon">üéØ</span> Expert Analysis Report</h1>';
    $html .= '<div class="report-subtitle">Professional Airbnb Listing Optimization</div>';
    $html .= '</div>';
    
    // Report metadata
    $html .= '<div class="report-meta">';
    $html .= '<div class="meta-item">';
    $html .= '<span class="meta-label">Generated:</span>';
    $html .= '<span class="meta-value">' . date('F j, Y g:i A', strtotime($generated_at)) . '</span>';
    $html .= '</div>';
    $html .= '<div class="meta-item">';
    $html .= '<span class="meta-label">Analysis Model:</span>';
    $html .= '<span class="meta-value">' . esc_html($model_used) . '</span>';
    $html .= '</div>';
    if ($output_tokens > 0) {
        $html .= '<div class="meta-item">';
        $html .= '<span class="meta-label">Report Length:</span>';
        $html .= '<span class="meta-value">' . number_format($output_tokens) . ' tokens</span>';
        $html .= '</div>';
    }
    if (!empty($listing_url)) {
        $html .= '<div class="meta-item">';
        $html .= '<span class="meta-label">Listing URL:</span>';
        $html .= '<span class="meta-value"><a href="' . esc_url($listing_url) . '" target="_blank">' . esc_html(parse_url($listing_url, PHP_URL_HOST)) . '</a></span>';
        $html .= '</div>';
    }
    $html .= '</div>';
    
    // Download actions
    $html .= '<div class="report-actions">';
    $html .= '<button id="download-pdf-btn" class="btn btn-primary" data-snapshot-id="' . esc_attr($snapshot_id) . '">';
    $html .= '<span class="btn-icon">üìÑ</span> Download PDF Report';
    $html .= '</button>';
    $html .= '<button id="email-report-btn" class="btn btn-secondary" data-snapshot-id="' . esc_attr($snapshot_id) . '">';
    $html .= '<span class="btn-icon">‚úâÔ∏è</span> Email Report';
    $html .= '</button>';
    $html .= '</div>';
    
    $html .= '</div>'; // End report-header
    
    // Table of contents
    if (count($sections) > 1) {
        $html .= '<div class="report-toc">';
        $html .= '<h2>üìã Table of Contents</h2>';
        $html .= '<ul class="toc-list">';
        foreach ($sections as $index => $section) {
            $anchor = 'section-' . ($index + 1);
            $html .= '<li><a href="#' . $anchor . '">' . esc_html($section['title']) . '</a></li>';
        }
        $html .= '</ul>';
        $html .= '</div>';
    }
    
    // Report content sections
    $html .= '<div class="report-content">';
    
    foreach ($sections as $index => $section) {
        $anchor = 'section-' . ($index + 1);
        $html .= '<div class="report-section" id="' . $anchor . '">';
        
        // Section header
        $html .= '<div class="section-header">';
        $html .= '<h2 class="section-title">' . esc_html($section['title']) . '</h2>';
        if (!empty($section['subtitle'])) {
            $html .= '<div class="section-subtitle">' . esc_html($section['subtitle']) . '</div>';
        }
        $html .= '</div>';
        
        // Section content
        $html .= '<div class="section-content">';
        $html .= airbnb_analyzer_format_section_content($section['content']);
        $html .= '</div>';
        
        $html .= '</div>'; // End report-section
    }
    
    $html .= '</div>'; // End report-content
    
    // Footer
    $html .= '<div class="report-footer">';
    $html .= '<div class="footer-content">';
    $html .= '<p><strong>Report ID:</strong> ' . esc_html($snapshot_id) . '</p>';
    $html .= '<p><strong>Generated by:</strong> ' . get_bloginfo('name') . ' - Advanced AI Analysis System</p>';
    $html .= '<p><small>This report contains AI-generated insights and recommendations. Results may vary based on market conditions and implementation.</small></p>';
    $html .= '</div>';
    $html .= '</div>';
    
    $html .= '</div>'; // End expert-analysis-report
    
    return $html;
}

/**
 * Parse analysis content into structured sections
 * 
 * @param string $content The raw analysis content
 * @return array Array of sections with titles and content
 */
function airbnb_analyzer_parse_analysis_content($content) {
    $sections = array();
    
    // Split content by major headers (##, ###, etc.)
    $lines = explode("\n", $content);
    $current_section = null;
    $current_content = '';
    
    foreach ($lines as $line) {
        $line = trim($line);
        
        // Check for section headers
        if (preg_match('/^#{1,3}\s+(.+)/', $line, $matches)) {
            // Save previous section if exists
            if ($current_section !== null) {
                $sections[] = array(
                    'title' => $current_section,
                    'content' => trim($current_content),
                    'subtitle' => ''
                );
            }
            
            // Start new section
            $current_section = $matches[1];
            $current_content = '';
        } else {
            // Add to current section content
            $current_content .= $line . "\n";
        }
    }
    
    // Add final section
    if ($current_section !== null) {
        $sections[] = array(
            'title' => $current_section,
            'content' => trim($current_content),
            'subtitle' => ''
        );
    }
    
    // If no sections were found, treat entire content as one section
    if (empty($sections)) {
        $sections[] = array(
            'title' => 'Analysis Results',
            'content' => $content,
            'subtitle' => ''
        );
    }
    
    return $sections;
}

/**
 * Format section content with enhanced HTML
 * 
 * @param string $content The section content
 * @return string Formatted HTML content
 */
function airbnb_analyzer_format_section_content($content) {
    // Convert markdown-style formatting to HTML
    $html = $content;
    
    // Convert headers (skip if already processed)
    $html = preg_replace('/^### (.*$)/m', '<h3>$1</h3>', $html);
    $html = preg_replace('/^## (.*$)/m', '<h2>$1</h2>', $html);
    $html = preg_replace('/^# (.*$)/m', '<h1>$1</h1>', $html);
    
    // Convert bold text
    $html = preg_replace('/\*\*(.*?)\*\*/', '<strong>$1</strong>', $html);
    
    // Convert italic text
    $html = preg_replace('/\*(.*?)\*/', '<em>$1</em>', $html);
    
    // Convert bullet points
    $html = preg_replace('/^- (.*$)/m', '<li>$1</li>', $html);
    
    // Wrap consecutive <li> elements in <ul>
    $html = preg_replace('/(<li>.*?<\/li>(?:\s*<li>.*?<\/li>)*)/s', '<ul>$1</ul>', $html);
    
    // Convert numbered lists
    $html = preg_replace('/^\d+\. (.*$)/m', '<li>$1</li>', $html);
    
    // Convert line breaks to paragraphs
    $paragraphs = explode("\n\n", $html);
    $formatted_paragraphs = array();
    
    foreach ($paragraphs as $paragraph) {
        $paragraph = trim($paragraph);
        if (!empty($paragraph)) {
            // Don't wrap if already has HTML tags
            if (!preg_match('/^<(h\d|ul|ol|li|div|blockquote)/', $paragraph)) {
                $paragraph = '<p>' . $paragraph . '</p>';
            }
            $formatted_paragraphs[] = $paragraph;
        }
    }
    
    $html = implode("\n\n", $formatted_paragraphs);
    
    // Clean up any double-wrapped elements
    $html = preg_replace('/<p>\s*<(h\d|ul|ol|div|blockquote)/', '<$1', $html);
    $html = preg_replace('/<\/(h\d|ul|ol|div|blockquote)>\s*<\/p>/', '</$1>', $html);
    
    return $html;
}

/**
 * Get CSS styles for the expert analysis report
 * 
 * @return string CSS styles
 */
function airbnb_analyzer_get_report_styles() {
    return '
    <style>
    .expert-analysis-report {
        max-width: 900px;
        margin: 0 auto;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        line-height: 1.6;
        color: #333;
        background: #fff;
        box-shadow: 0 0 20px rgba(0,0,0,0.1);
        border-radius: 12px;
        overflow: hidden;
    }
    
    .report-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 40px 30px;
        text-align: center;
        position: relative;
    }
    
    .report-title h1 {
        margin: 0;
        font-size: 2.5em;
        font-weight: 700;
        margin-bottom: 10px;
    }
    
    .report-icon {
        font-size: 1.2em;
        margin-right: 10px;
    }
    
    .report-subtitle {
        font-size: 1.2em;
        opacity: 0.9;
        margin-bottom: 30px;
    }
    
    .report-meta {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 30px;
        font-size: 0.95em;
    }
    
    .meta-item {
        background: rgba(255,255,255,0.1);
        padding: 8px 16px;
        border-radius: 20px;
        white-space: nowrap;
    }
    
    .meta-label {
        font-weight: 600;
        margin-right: 8px;
    }
    
    .meta-value {
        opacity: 0.9;
    }
    
    .meta-value a {
        color: white;
        text-decoration: underline;
    }
    
    .report-actions {
        display: flex;
        justify-content: center;
        gap: 15px;
        flex-wrap: wrap;
    }
    
    .btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 12px 24px;
        border: none;
        border-radius: 25px;
        font-size: 1em;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    
    .btn-primary {
        background: white;
        color: #667eea;
    }
    
    .btn-primary:hover {
        background: #f8f9fa;
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(0,0,0,0.15);
    }
    
    .btn-secondary {
        background: rgba(255,255,255,0.2);
        color: white;
        border: 2px solid rgba(255,255,255,0.3);
    }
    
    .btn-secondary:hover {
        background: rgba(255,255,255,0.3);
        transform: translateY(-2px);
    }
    
    .btn-icon {
        font-size: 1.1em;
    }
    
    .report-toc {
        background: #f8f9fa;
        padding: 30px;
        border-bottom: 1px solid #e9ecef;
    }
    
    .report-toc h2 {
        margin: 0 0 20px 0;
        color: #495057;
        font-size: 1.5em;
    }
    
    .toc-list {
        list-style: none;
        padding: 0;
        margin: 0;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 10px;
    }
    
    .toc-list li {
        margin: 0;
    }
    
    .toc-list a {
        display: block;
        padding: 12px 20px;
        background: white;
        border-radius: 8px;
        text-decoration: none;
        color: #495057;
        border-left: 4px solid #667eea;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }
    
    .toc-list a:hover {
        background: #667eea;
        color: white;
        transform: translateX(5px);
    }
    
    .report-content {
        padding: 0;
    }
    
    .report-section {
        padding: 40px 30px;
        border-bottom: 1px solid #e9ecef;
    }
    
    .report-section:last-child {
        border-bottom: none;
    }
    
    .section-header {
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid #667eea;
    }
    
    .section-title {
        margin: 0;
        color: #2c3e50;
        font-size: 1.8em;
        font-weight: 600;
    }
    
    .section-subtitle {
        margin-top: 8px;
        color: #6c757d;
        font-size: 1.1em;
    }
    
    .section-content {
        font-size: 1.05em;
        line-height: 1.7;
    }
    
    .section-content h1,
    .section-content h2,
    .section-content h3 {
        color: #495057;
        margin-top: 30px;
        margin-bottom: 15px;
    }
    
    .section-content h1 {
        font-size: 1.6em;
        border-bottom: 2px solid #e9ecef;
        padding-bottom: 10px;
    }
    
    .section-content h2 {
        font-size: 1.4em;
    }
    
    .section-content h3 {
        font-size: 1.2em;
    }
    
    .section-content p {
        margin-bottom: 15px;
        text-align: justify;
    }
    
    .section-content ul,
    .section-content ol {
        margin: 20px 0;
        padding-left: 30px;
    }
    
    .section-content li {
        margin-bottom: 8px;
    }
    
    .section-content strong {
        color: #2c3e50;
        font-weight: 600;
    }
    
    .section-content em {
        color: #6c757d;
        font-style: italic;
    }
    
    .section-content blockquote {
        margin: 20px 0;
        padding: 20px;
        background: #f8f9fa;
        border-left: 4px solid #667eea;
        border-radius: 0 8px 8px 0;
        font-style: italic;
    }
    
    .report-footer {
        background: #f8f9fa;
        padding: 30px;
        text-align: center;
        border-top: 1px solid #e9ecef;
    }
    
    .footer-content {
        max-width: 600px;
        margin: 0 auto;
        color: #6c757d;
    }
    
    .footer-content p {
        margin: 10px 0;
    }
    
    .footer-content small {
        font-size: 0.9em;
        opacity: 0.8;
    }
    
    /* Responsive design */
    @media (max-width: 768px) {
        .expert-analysis-report {
            margin: 20px;
        }
        
        .report-header {
            padding: 30px 20px;
        }
        
        .report-title h1 {
            font-size: 2em;
        }
        
        .report-meta {
            flex-direction: column;
            align-items: center;
        }
        
        .report-actions {
            flex-direction: column;
            align-items: center;
        }
        
        .btn {
            width: 100%;
            max-width: 250px;
            justify-content: center;
        }
        
        .report-toc {
            padding: 20px;
        }
        
        .toc-list {
            grid-template-columns: 1fr;
        }
        
        .report-section {
            padding: 30px 20px;
        }
        
        .section-title {
            font-size: 1.5em;
        }
        
        .section-content {
            font-size: 1em;
        }
    }
    
    /* Print styles */
    @media print {
        .expert-analysis-report {
            box-shadow: none;
            border-radius: 0;
        }
        
        .report-actions {
            display: none;
        }
        
        .report-section {
            break-inside: avoid;
            page-break-inside: avoid;
        }
        
        .section-header {
            break-after: avoid;
            page-break-after: avoid;
        }
    }
    </style>';
}

/**
 * Generate PDF from expert analysis content
 * 
 * @param array $analysis_data The expert analysis data
 * @param string $listing_url The original listing URL
 * @param string $snapshot_id The snapshot ID
 * @return string|WP_Error PDF file path or error
 */
function airbnb_analyzer_generate_pdf($analysis_data, $listing_url = '', $snapshot_id = '') {
    // Check if we have a PDF library available
    if (!function_exists('wp_remote_post')) {
        return new WP_Error('pdf_not_available', 'PDF generation is not available.');
    }
    
    // Generate the HTML content
    $html_content = airbnb_analyzer_format_expert_analysis($analysis_data, $listing_url, $snapshot_id);
    $styles = airbnb_analyzer_get_report_styles();
    
    // Create complete HTML document
    $full_html = '<!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <title>Expert Analysis Report - ' . get_bloginfo('name') . '</title>
        ' . $styles . '
    </head>
    <body>
        ' . $html_content . '
    </body>
    </html>';
    
    // Use WordPress's built-in PDF generation or fallback to HTML
    $upload_dir = wp_upload_dir();
    $pdf_filename = 'expert-analysis-' . $snapshot_id . '.html';
    $pdf_path = $upload_dir['path'] . '/' . $pdf_filename;
    
    // Save HTML file (can be opened in browser and printed to PDF)
    file_put_contents($pdf_path, $full_html);
    
    return $upload_dir['url'] . '/' . $pdf_filename;
}

/**
 * AJAX handler for PDF download
 */
add_action('wp_ajax_download_expert_analysis_pdf', 'airbnb_analyzer_handle_pdf_download');
add_action('wp_ajax_nopriv_download_expert_analysis_pdf', 'airbnb_analyzer_handle_pdf_download');

function airbnb_analyzer_handle_pdf_download() {
    // Verify nonce
    if (!wp_verify_nonce($_POST['nonce'], 'airbnb_analyzer_nonce')) {
        wp_send_json_error(array('message' => 'Security check failed.'));
    }
    
    $snapshot_id = sanitize_text_field($_POST['snapshot_id']);
    
    if (empty($snapshot_id)) {
        wp_send_json_error(array('message' => 'Invalid request.'));
    }
    
    // Get the expert analysis data
    global $wpdb;
    $table_name = $wpdb->prefix . 'airbnb_analyzer_brightdata_requests';
    $request = $wpdb->get_row($wpdb->prepare(
        "SELECT * FROM $table_name WHERE snapshot_id = %s",
        $snapshot_id
    ));
    
    if (!$request || empty($request->expert_analysis_data)) {
        wp_send_json_error(array('message' => 'Expert analysis not found.'));
    }
    
    $analysis_data = json_decode($request->expert_analysis_data, true);
    
    if (!$analysis_data || !isset($analysis_data['content'])) {
        wp_send_json_error(array('message' => 'Invalid analysis data.'));
    }
    
    // Generate PDF
    $pdf_url = airbnb_analyzer_generate_pdf($analysis_data, $request->listing_url, $snapshot_id);
    
    if (is_wp_error($pdf_url)) {
        wp_send_json_error(array('message' => $pdf_url->get_error_message()));
    }
    
    wp_send_json_success(array(
        'pdf_url' => $pdf_url,
        'filename' => 'expert-analysis-' . $snapshot_id . '.html'
    ));
}

/**
 * AJAX handler for emailing report
 */
add_action('wp_ajax_email_expert_analysis_report', 'airbnb_analyzer_handle_email_report');
add_action('wp_ajax_nopriv_email_expert_analysis_report', 'airbnb_analyzer_handle_email_report');

function airbnb_analyzer_handle_email_report() {
    // Verify nonce
    if (!wp_verify_nonce($_POST['nonce'], 'airbnb_analyzer_nonce')) {
        wp_send_json_error(array('message' => 'Security check failed.'));
    }
    
    $snapshot_id = sanitize_text_field($_POST['snapshot_id']);
    $email = sanitize_email($_POST['email']);
    
    if (empty($snapshot_id)) {
        wp_send_json_error(array('message' => 'Invalid request.'));
    }
    
    // Get the expert analysis data
    global $wpdb;
    $table_name = $wpdb->prefix . 'airbnb_analyzer_brightdata_requests';
    $request = $wpdb->get_row($wpdb->prepare(
        "SELECT * FROM $table_name WHERE snapshot_id = %s",
        $snapshot_id
    ));
    
    if (!$request || empty($request->expert_analysis_data)) {
        wp_send_json_error(array('message' => 'Expert analysis not found.'));
    }
    
    $analysis_data = json_decode($request->expert_analysis_data, true);
    
    if (!$analysis_data || !isset($analysis_data['content'])) {
        wp_send_json_error(array('message' => 'Invalid analysis data.'));
    }
    
    // Use the existing email or provided email
    $recipient_email = !empty($email) ? $email : $request->email;
    
    // Send email with enhanced HTML content
    $sent = airbnb_analyzer_send_enhanced_analysis_email($recipient_email, $request->listing_url, $analysis_data, $snapshot_id);
    
    if ($sent) {
        wp_send_json_success(array('message' => 'Report sent successfully to ' . $recipient_email));
    } else {
        wp_send_json_error(array('message' => 'Failed to send email.'));
    }
}

/**
 * Send enhanced HTML email with expert analysis
 */
function airbnb_analyzer_send_enhanced_analysis_email($email, $listing_url, $analysis_data, $snapshot_id) {
    $site_name = get_bloginfo('name');
    $results_url = home_url('/airbnb-analysis-results/?id=' . $snapshot_id);
    
    $subject = 'Your Expert Analysis Report - ' . $site_name;
    
    // Generate HTML content for email
    $html_content = airbnb_analyzer_format_expert_analysis($analysis_data, $listing_url, $snapshot_id);
    $styles = airbnb_analyzer_get_report_styles();
    
    $html_message = '<!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <title>' . $subject . '</title>
        ' . $styles . '
    </head>
    <body style="margin: 0; padding: 20px; background: #f5f5f5;">
        <div style="max-width: 800px; margin: 0 auto;">
            ' . $html_content . '
        </div>
    </body>
    </html>';
    
    // Plain text version
    $text_message = "Your Expert Analysis Report is ready!\n\n";
    $text_message .= "Listing URL: " . $listing_url . "\n";
    $text_message .= "View online: " . $results_url . "\n\n";
    $text_message .= "Best regards,\n" . $site_name;
    
    $headers = array(
        'From: ' . $site_name . ' <' . get_option('admin_email') . '>',
        'Reply-To: ' . get_option('admin_email'),
        'Content-Type: text/html; charset=UTF-8'
    );
    
    return wp_mail($email, $subject, $html_message, $headers);
}

/**
 * AJAX handler for getting enhanced expert analysis HTML
 */
add_action('wp_ajax_get_enhanced_expert_analysis', 'airbnb_analyzer_get_enhanced_analysis_html');
add_action('wp_ajax_nopriv_get_enhanced_expert_analysis', 'airbnb_analyzer_get_enhanced_analysis_html');

function airbnb_analyzer_get_enhanced_analysis_html() {
    // Verify nonce
    if (!wp_verify_nonce($_POST['nonce'], 'airbnb_analyzer_nonce')) {
        wp_send_json_error(array('message' => 'Security check failed.'));
    }
    
    $snapshot_id = sanitize_text_field($_POST['snapshot_id']);
    
    if (empty($snapshot_id)) {
        wp_send_json_error(array('message' => 'Invalid request.'));
    }
    
    // Get the expert analysis data
    global $wpdb;
    $table_name = $wpdb->prefix . 'airbnb_analyzer_brightdata_requests';
    $request = $wpdb->get_row($wpdb->prepare(
        "SELECT * FROM $table_name WHERE snapshot_id = %s",
        $snapshot_id
    ));
    
    if (!$request || empty($request->expert_analysis_data)) {
        wp_send_json_error(array('message' => 'Expert analysis not found.'));
    }
    
    $analysis_data = json_decode($request->expert_analysis_data, true);
    
    if (!$analysis_data || !isset($analysis_data['content'])) {
        wp_send_json_error(array('message' => 'Invalid analysis data.'));
    }
    
    // Generate enhanced HTML
    $enhanced_html = airbnb_analyzer_format_expert_analysis($analysis_data, $request->listing_url, $snapshot_id);
    
    // Get the CSS styles
    $styles = airbnb_analyzer_get_report_styles();
    
    // Combine styles and HTML
    $complete_html = $styles . $enhanced_html;
    
    wp_send_json_success(array(
        'html' => $complete_html,
        'analysis_data' => $analysis_data
    ));
} 